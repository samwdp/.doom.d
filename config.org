#+TITLE: Doom Configuration
#+AUTHOR: Sam Precious
#+EMAIL: samwdp@gmail.com
#+LANGUAGE: en
#+STARTUP: inlineimages
#+PROPERTY: header-args :tangle yes :cache yes :results silent :padline no

* Table Of Contents :toc:
- [[#configuration][Configuration]]
  - [[#global-optimisations][Global Optimisations]]
  - [[#personal-information][Personal Information]]
  - [[#doom-theming][Doom Theming]]
  - [[#tools][Tools]]
  - [[#languages][Languages]]
  - [[#key-remaps][Key Remaps]]
  - [[#functions][Functions]]

* Configuration
** Global Optimisations
*** Unicode
#+BEGIN_SRC emacs-lisp
(setq inhibit-compacting-font-caches t)
#+END_SRC
** Personal Information
*** Name
#+BEGIN_SRC emacs-lisp
(setq user-full-name "Sam Precious")
#+END_SRC
*** Email Address
#+BEGIN_SRC emacs-lisp
(setq user-mail-address "samwdp@gmail.com")
#+end_src
*** Org Mode
#+BEGIN_SRC emacs-lisp
(setq org-directory "~/Dropbox/org")
(setq org-log-done 'time)
#+END_SRC+END_SRC
** Doom Theming
*** Line Numbers
#+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type nil)
#+END_SRC
*** Font
#+BEGIN_SRC emacs-lisp
(when IS-WINDOWS
  (setq doom-font (font-spec :family "NotoSansMono Nerd Font" :size 18)
        doom-big-font (font-spec :family "NotoSansMono Nerd Font" :size 36)
        doom-variable-pitch-font (font-spec :family "NotoSans Nerd Font" :size 18)))
(when IS-LINUX
  (setq doom-font (font-spec :family "monospace" :size 18)
        doom-big-font (font-spec :family "monospace" :size 36)
        doom-variable-pitch-font (font-spec :family "sans" :size 18)))
#+END_SRC
*** Theme
#+BEGIN_SRC emacs-lisp
(setq doom-theme 'doom-dark+)
#+END_SRC
*** Banner
#+BEGIN_SRC emacs-lisp
;;; :ui doom-dashboard
(setq fancy-splash-image (concat doom-private-dir "banners/default.png"))
;; Don't need the menu; I know them all by heart
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-shortmenu)
#+END_SRC
*** Maximised Frame
#+BEGIN_SRC emacs-lisp
(toggle-frame-maximized)
#+END_SRC
*** Modeline
#+BEGIN_SRC emacs-lisp
(setq doom-modeline-buffer-file-name-style 'file-name)
(setq doom-modeline-buffer-encoding nil)
(add-hook 'after-init-hook #'fancy-battery-mode)
(setq fancy-battery-mode-line
      '(:eval (unless (equal (cdr (assq ?b fancy-battery-last-status)) "+")
                (fancy-battery-default-mode-line))))
#+END_SRC
*** Default Major mode for scratch buffer
Sets the default major mode of the scratch buffer to org-mode
#+begin_src emacs-lisp
(setq doom-scratch-initial-major-mode 'org-mode)
#+end_src
*** Default Directory
#+begin_src emacs-lisp
(setq default-directory "~")
#+end_src
*** Counsel
#+begin_src emacs-lisp
(setq company-idle-delay  0.2
      company-tooltip-idle-delay 0)
#+end_src
*** Centered Window
#+begin_src emacs-lisp
(setq centered-window-mode t)
#+end_src
** Tools
*** Projectile
#+BEGIN_SRC emacs-lisp
(setq projectile-indexing-method 'native)
#+END_SRC
*** Babel
Adds csharp and powershell languages to the org babel list
#+BEGIN_SRC emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages
 '((csharp . t)
   (powershell . t)))
#+END_SRC
*** LSP
Sets some defaults for LSP mode doe more visuals
#+BEGIN_SRC emacs-lisp
(setq lsp-ui-doc-enable t
      lsp-ui-doc-position 'top-right-corner
      lsp-ui-doc-alignment 'frame
      lsp-ui-doc-max-width 70)
(setq lsp-lens-enable t)
(setq lsp-ui-sideline-enable nil)
(setq lsp-ui-imenu-enable t)
#+END_SRC
*** Ivy
#+begin_src emacs-lisp
(after! ivy-posframe
  (setq ivy-posframe-border-width 5))
#+end_src
*** Spelling
#+begin_src emacs-lisp
(setq ispell-dictionary "en_GB")
#+end_src
*** Windows Specific
This is used in conjunction with shell mode to change the default shell to powershell core.
**** TODO This will probably change when the powershell core version updates
#+begin_src emacs-lisp
(when IS-WINDOWS
  (setq explicit-shell-file-name "C:/Program Files/PowerShell/7/pwsh.exe"))
#+end_src
** Languages
*** CSX
This is adding the ability to use csharp-mode with csharp script files
#+BEGIN_SRC emacs-lisp
(use-package! csharp-mode
  :mode (("\\.csx\\'" . csharp-mode)))
#+END_SRC
** Key Remaps
*** Ctrl-/ for Comment/Uncomment
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-/") 'comment-line)
#+END_SRC
** Functions
*** Display Battery if plugged in
#+begin_src emacs-lisp
(defun toggle-battery ()
  (if (string-match (battery-format "%L" (funcall battery-status-function)) "off-line") (display-battery-mode t) (display-battery-mode nil)))
#+end_src
